options:
  parameters:
    author: Wojciech SP5WWP
    catch_exceptions: 'True'
    category: '[GRC Hier Blocks]'
    cmake_opt: ''
    comment: ''
    copyright: M17 Foundation 2025
    description: ''
    gen_cmake: 'On'
    gen_linking: dynamic
    generate_options: no_gui
    hier_block_src_path: '.:'
    id: som_zmq_test_rx
    max_nouts: '0'
    output_language: python
    placement: (0,0)
    qt_qss_theme: ''
    realtime_scheduling: ''
    run: 'True'
    run_command: '{python} -u {filename}'
    run_options: run
    sizing_mode: fixed
    thread_safe_setters: ''
    title: Test ZMQ receiver
    window_size: (1000,1000)
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 12.0]
    rotation: 0
    state: enabled

blocks:
- name: samp_rate
  id: variable
  parameters:
    comment: ''
    value: '500000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [200, 12]
    rotation: 0
    state: enabled
- name: zmq_len
  id: variable
  parameters:
    comment: ''
    value: 2**11
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [464, 12.0]
    rotation: 0
    state: enabled
- name: audio_source_0
  id: audio_source
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    device_name: bsb_source
    maxoutbuf: '0'
    minoutbuf: '0'
    num_outputs: '2'
    ok_to_block: 'True'
    samp_rate: '500000'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [8, 320.0]
    rotation: 0
    state: true
- name: blocks_correctiq_0
  id: blocks_correctiq
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [560, 336.0]
    rotation: 0
    state: enabled
- name: blocks_float_to_complex_0
  id: blocks_float_to_complex
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [192, 320.0]
    rotation: 0
    state: true
- name: blocks_stream_to_vector_0
  id: blocks_stream_to_vector
  parameters:
    affinity: ''
    alias: ''
    comment: ''
    maxoutbuf: '0'
    minoutbuf: '0'
    num_items: zmq_len
    type: complex
    vlen: '1'
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [720, 336.0]
    rotation: 0
    state: true
- name: bsb_source
  id: parameter
  parameters:
    alias: ''
    comment: ''
    hide: none
    label: Baseband source  device
    short_id: b
    type: str
    value: hw:SX1255
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [296, 12.0]
    rotation: 0
    state: true
- name: epy_block_1
  id: epy_block
  parameters:
    _source_code: "import numpy as np\nfrom gnuradio import gr\nfrom scipy.signal\
      \ import firwin2, lfilter\n\n#granularity\nN = 1000\n\nclass firwin2_filter(gr.sync_block):\n\
      \    def __init__(self, length=91, sinc_exp=1.0, sinc_gain=110.0, sinc_ratio=0.125):\n\
      \        gr.sync_block.__init__(self,\n            name=\"Sinc Compensating\
      \ Filter\",\n            in_sig=[np.complex64],\n            out_sig=[np.complex64])\n\
      \        self.length, self.sinc_exp, self.sinc_gain, self.sinc_ratio = length,\
      \ sinc_exp, sinc_gain, sinc_ratio\n        self.freq = np.linspace(0.0, 1.0,\
      \ N)\n        self.ampl = np.zeros(N)\n        self.update_taps()\n        self.zi_r\
      \ = np.zeros(len(self.taps)-1, dtype=np.float32)\n        self.zi_i = np.zeros(len(self.taps)-1,\
      \ dtype=np.float32)   \n\n    def update_taps(self):\n        for i in range(N-1):\n\
      \            self.ampl[i] = pow(1 + pow((1 - np.sinc(i/(N-1) * self.sinc_ratio)),\
      \ self.sinc_exp), self.sinc_gain)\n        self.ampl[N-1] = 0\n        self.taps\
      \ = firwin2(self.length, self.freq, self.ampl, window='blackmanharris').astype(np.float32)\n\
      \        \n    #the set_* functions below do not actually make the parameters\
      \ runtime adjustable :(\n    def set_length(self, length):\n        self.length\
      \ = length\n        self.update_taps()\n        self.zi_r = np.zeros(len(self.taps)-1,\
      \ dtype=np.float32)\n        self.zi_i = np.zeros(len(self.taps)-1, dtype=np.float32)\n\
      \n    def set_sinc_exp(self, sinc_exp):\n        self.sinc_exp = sinc_exp\n\
      \        self.update_taps()\n\n    def set_sinc_gain(self, sinc_gain):\n   \
      \     self.sinc_gain = sinc_gain\n        self.update_taps()\n\n    def set_sinc_ratio(self,\
      \ sinc_ratio):\n        self.sinc_ratio = sinc_ratio\n        self.update_taps()\n\
      \n    def work(self, input_items, output_items):\n        x = input_items[0]\n\
      \        y_r, self.zi_r = lfilter(self.taps, 1.0, x.real, zi=self.zi_r)\n  \
      \      y_i, self.zi_i = lfilter(self.taps, 1.0, x.imag, zi=self.zi_i)\n    \
      \    output_items[0][:] = y_r + 1j * y_i\n        return len(output_items[0])\n"
    affinity: ''
    alias: ''
    comment: ''
    length: '91'
    maxoutbuf: '0'
    minoutbuf: '0'
    sinc_exp: '1.0'
    sinc_gain: '110'
    sinc_ratio: '0.125'
  states:
    _io_cache: ('Sinc Compensating Filter', 'firwin2_filter', [('length', '91'), ('sinc_exp',
      '1.0'), ('sinc_gain', '110.0'), ('sinc_ratio', '0.125')], [('0', 'complex',
      1)], [('0', 'complex', 1)], '', ['length', 'sinc_exp', 'sinc_gain', 'sinc_ratio'])
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [352, 308.0]
    rotation: 0
    state: enabled
- name: zeromq_pub_sink_0
  id: zeromq_pub_sink
  parameters:
    address: tcp://*:17005
    affinity: ''
    alias: ''
    bind: 'True'
    comment: ''
    drop_on_hwm: 'True'
    hwm: '-1'
    key: ''
    pass_tags: 'False'
    timeout: '100'
    type: complex
    vlen: zmq_len
  states:
    bus_sink: false
    bus_source: false
    bus_structure: null
    coordinate: [872, 292.0]
    rotation: 0
    state: true

connections:
- [audio_source_0, '0', blocks_float_to_complex_0, '0']
- [audio_source_0, '1', blocks_float_to_complex_0, '1']
- [blocks_correctiq_0, '0', blocks_stream_to_vector_0, '0']
- [blocks_float_to_complex_0, '0', epy_block_1, '0']
- [blocks_stream_to_vector_0, '0', zeromq_pub_sink_0, '0']
- [epy_block_1, '0', blocks_correctiq_0, '0']

metadata:
  file_format: 1
  grc_version: 3.10.12.0
